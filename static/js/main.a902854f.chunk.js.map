{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handlerAddGood","good","setState","handlerClearGood","this","className","type","onClick","map","Component","ReactDOM","render","document","getElementById"],"mappings":"2OAOaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,eAAiB,SAACC,GAAD,OAAkB,EAAKC,SAAS,CAAEH,aAAcE,KALnE,EAOEE,iBAAmB,kBAAM,EAAKD,SAAS,CAAEH,aAAc,MAPzD,4CASE,WAAU,IAAD,OAELA,EACEK,KAAKN,MADPC,aAGF,OACE,uBAAMM,UAAU,oBAAhB,UACE,qBACEA,UAAWN,EAAe,sCAAwC,QADpE,UAGGA,EAAY,UAAMA,EAAN,gBAAmC,oBAC/CA,GACC,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,sBAKpB,uBAAOE,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAAAP,GAAI,OACb,qBACE,UAAQ,OAERI,UAAYN,IAAiBE,EAAQ,+BAAiC,GAHxE,UAKGF,IAAiBE,EAEd,6BACE,wBACE,UAAQ,eACRK,KAAK,SACLD,UAAYN,IAAiBE,EAAQ,iBAAmB,SACxDM,QAAS,EAAKJ,iBAJhB,iBAWF,6BACE,wBACE,UAAQ,YACRG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKP,eAAeC,IAJrC,iBAUN,oBACE,UAAQ,YACRI,UAAU,eAFZ,SAIIJ,MAhCCA,iBAnCrB,GAAyBQ,aCrBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a902854f.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable max-len */\n/* eslint-disable react/prefer-stateless-function */\nimport { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  handlerAddGood = (good: string) => this.setState({ selectedGood: good });\n\n  handlerClearGood = () => this.setState({ selectedGood: '' });\n\n  render() {\n    const {\n      selectedGood,\n    } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1\n          className={selectedGood ? 'title is-flex is-align-items-center' : 'title'}\n        >\n          {selectedGood ? `${selectedGood} is selected` : 'No goods selected' }\n          {selectedGood && (\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.handlerClearGood}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={(selectedGood === good) ? 'has-background-success-light' : ''}\n              >\n                {selectedGood === good\n                  ? (\n                    <td>\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className={(selectedGood === good) ? 'button is-info' : 'button'}\n                        onClick={this.handlerClearGood}\n                      >\n                        -\n                      </button>\n                    </td>\n                  )\n                  : (\n                    <td>\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => this.handlerAddGood(good)}\n                      >\n                        +\n                      </button>\n                    </td>\n                  )}\n                <td\n                  data-cy=\"GoodTitle\"\n                  className=\"is-vcentered\"\n                >\n                  { good }\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}